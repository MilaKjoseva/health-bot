<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>HealthBot</title>
    <style>* { padding: 0; margin: 0; } canvas { background: #eee; display: block; margin: 0 auto; }</style>
</head>
<body>

<canvas id="myCanvas" style = "margin-top:100px" width="580" height="520"></canvas>


<body style = "background-color:#E5D89B">
<body onload="drawS()">

<script>
    var canvas = document.getElementById("myCanvas");
    var ctx = canvas.getContext("2d");

	var x = canvas.width/2;
	var y = -30;
	var dy = 2;
	var dx = 0;
	var objectSize = 40;

	var BasketHeight = 60;
	var BasketWidth = 70;
	var BasketX = (canvas.width-BasketWidth)/2;
	var i;

	var rightPressed = false;
	var leftPressed = false;
	var asciiRight = 39;
	var asciiLeft = 37;
	var isObjectGone = false;

	var HealthyArr = [];
	var healthyImages = ["apple.png", "cherry.png", "pear.png", "Tomato.png", "carrot.png"];
	var sweets =[];
	var sweImages = ["bacon.png", "candy.png", "cookie.png", "burger.png", "icecream.png"]
	var ccounter = 1;

	var score = 0;
	var p = 0;

	var level = 1;
	var timeLevel = 0;
	var levelInterval;
	var drawInterval;

	var currScreen = "start";

	var scoreNeeded = 100;

	//////////////////////////////////


	var background = new Image();
	background.src = "backgroundplus.jpg";

	var startBackground = new Image();
	startBackground.src = "startBackground.jpg";

	var helpBackground = new Image();
	helpBackground.src = "startBackground.jpg";


	////////////////////////////////////


	function getMousePos(canvas, event) {
		var rect = canvas.getBoundingClientRect();
		return {
			x: event.clientX - rect.left,
			y: event.clientY - rect.top
		};
	}
	//Function to check whether a point is inside a rectangle
	function isInside(pos, rect){
		return pos.x > rect.x && pos.x < rect.x+rect.width && pos.y < rect.y+rect.height && pos.y > rect.y
	}

	//The rectangle should have x,y,width,height properties
	var rectStart = {
		x:230,
		y:230,
		width:120,
		height:50

	};

	var rectHelp = {
		x:230,
		y:300,
		width:120,
		height:50
	}

	var rectBack = {
		x:20,
		y:20,
		width:120,
		height:50
	}

	var rectNewGame = {
		x:190,
		y:250,
		width:2000,
		height:50
	}

	canvas.addEventListener('click', function(evt) {
		var mousePos = getMousePos(canvas, evt);

		if (isInside(mousePos,rectBack) && currScreen == "help") {
			drawS();
		}
		else if(isInside(mousePos,rectHelp) && currScreen == "start") {
			help();
		}
		else if(isInside(mousePos,rectStart) && currScreen == "start") {

			levelInterval = setInterval(Level, 10);
		}
		else if (isInside(mousePos,rectNewGame) && currScreen == "end") {

			score = 0;
			level = 1;
			dy = 2;
			levelInterval = setInterval(Level, 10);

			//location.reload();
		}

		}, false);

	function help() {

		currScreen = "help";
		ctx.clearRect(0, 0, canvas.width, canvas.height);
		ctx.beginPath();
		ctx.drawImage(helpBackground,0,0);
		ctx.font = "30px Arial";
		ctx.fillStyle = "#2455AE";
		ctx.fillText("In order to pass a level you must", 70, 150);
		ctx.fillText("earn a certain amount of points", 85, 180);
		ctx.fillText("Apples, carrots, cherries, bananas and ", 30, 250);
		ctx.fillText("tomatoes are worth +10 points", 90, 280);
		ctx.fillText("Pizzas, burgers, candy, cookies and ", 50, 350);
		ctx.fillText("cupcakes are worth -10 points", 90, 380);

		ctx.fillStyle="#E5D89B";
		ctx.fillRect(20, 20, 120, 50);

		/*ctx.lineWidth="3";
		ctx.strokeStyle="#2455AE";
		ctx.rect(20,20,120,50);
		ctx.stroke();*/

		ctx.font = "27px Elephant";
		ctx.fillStyle = "#3CBB2D";
		ctx.fillText("BACK", 35, 55);

		/*ctx.lineWidth="3";
		ctx.strokeStyle="#2455AE";
		ctx.rect(20,20,120,50);
		ctx.stroke();*/


	}

	function drawS(){

		currScreen = "start";
		ctx.clearRect(0, 0, canvas.width, canvas.height);

		ctx.beginPath();

		ctx.drawImage(startBackground,0,0);

		ctx.fillStyle="#E5D89B";
		ctx.fillRect(40, 110, 500, 80);

		ctx.font = "80px Elephant";
		ctx.fillStyle = "#2455AE";
		ctx.fillText("HealthBot", 130, 180);

		ctx.lineWidth="6";
        ctx.strokeStyle="#3CBB2D";
        ctx.strokeRect(40,110,500,80);
        ctx.stroke();


		ctx.fillStyle="#E5D89B";
		ctx.fillRect(230, 230, 120, 50);

		/*ctx.lineWidth="3";
		ctx.strokeStyle="#2455AE";
		ctx.rect(230,230,120,50);
		ctx.stroke();*/

		ctx.font = "27px Elephant";
		ctx.fillStyle = "#3CBB2D";
		ctx.fillText("START", 245, 265);



		ctx.fillStyle="#E5D89B";
		ctx.fillRect(230, 300, 120, 50);

		/*ctx.lineWidth="3";
		ctx.strokeStyle="#2455AE";
		ctx.rect(230,300,120,50);
		ctx.stroke();*/

		ctx.font = "27px Elephant";
		ctx.fillStyle = "#3CBB2D";
		ctx.fillText("HELP", 252, 335);




	}

	function Level(){

		currScreen = "level";
		ctx.clearRect(0, 0, canvas.width, canvas.height);


		ctx.fillStyle="#A8BBCC";
		ctx.fillRect(0,0, canvas.width, canvas.height);


		ctx.fillStyle="#E5D89B";
		ctx.fillRect(165, 170, 250, 70);

		ctx.lineWidth="3";
		ctx.strokeStyle="#2455AE";
		ctx.rect(165,170,250,70);
		ctx.stroke();

		ctx.font = "60px Elephant";
		ctx.fillStyle = "#3CBB2D";
		ctx.fillText("Level "+level, 200, 230);


		if(timeLevel == 100){
			timeLevel = 0;
			level++;
			drawInterval = setInterval(draw, 15);

			clearInterval(levelInterval);


		}

		timeLevel++;


	}

	function GameWon(){

		currScreen = "end";
		ctx.clearRect(0, 0, canvas.width, canvas.height);
		ctx.beginPath();
		ctx.drawImage(startBackground,0,0);
		ctx.font = "60px Elephant";
		ctx.fillStyle = "#2455AE";
		ctx.fillText("GAME WON", 120, 200);
		//clearInterval(levelInterval);
		//clearInterval(draw);

		ctx.fillStyle="#E5D89B";
		ctx.fillRect(190, 250, 200, 50);

		/*ctx.lineWidth="3";
		ctx.strokeStyle="#2455AE";
		ctx.rect(190,250,200,50);
		ctx.stroke();*/

		ctx.font = "27px Elephant";
		ctx.fillStyle = "#3CBB2D";
		ctx.fillText("NEW GAME", 216, 285);



	}





	/////////////////////////////////


	document.addEventListener("keydown", keyDownHandler, false);
	document.addEventListener("keyup", keyUpHandler, false);

	function getRndInteger(min, max) {
		return Math.floor(Math.random() * (max - min) ) + min;
	}

	x = getRndInteger(objectSize, 570);

	function keyDownHandler(e) {
		if(e.keyCode == asciiRight) {
			rightPressed = true;
		}
		else if(e.keyCode == asciiLeft) {
			leftPressed = true;
		}
	}
	function keyUpHandler(e) {
		if(e.keyCode == asciiRight) {
			rightPressed = false;
		}
		else if(e.keyCode == asciiLeft) {
			leftPressed = false;
		}
	}

	////////////////////////////////

	function Healthy(x, y, color, width, height, imageSource) {
		this.x = x;
		this.y = y;
		this.color = color;
		this.width = width;
		this.height = height;
		this.image = new Image();
        this.image.src = imageSource;
	}

	Healthy.prototype.draw = function() {
		ctx.drawImage(this.image, this.x, this.y, this.width, this.height);
	}

	Healthy.prototype.update = function() {
		this.y += dy;
	}

	Healthy.prototype.touch = function() {
		if(this.x > nBasket.x - 30 && this.x < nBasket.x + BasketWidth && this.y + objectSize >= canvas.height-BasketHeight
		&& this.y + objectSize < canvas.height-BasketHeight+10) {
			HealthyArr.splice(i, 1);
			score = score + 10;
		}
		else if(this.y > 520) {
			HealthyArr.splice(i, 1);
		}

	}

	//////////////////////////////////

	function Sweet(x, y, color, width, height, imageSource) {
		this.x = x;
		this.y = y;
		this.color = color;
		this.width = width;
		this.height = height;
		this.image = new Image();
        this.image.src = imageSource;
	}

	Sweet.prototype.draw = function() {
		ctx.drawImage(this.image, this.x, this.y, this.width, this.height);
	}

	Sweet.prototype.update = function() {
		this.y += dy;
	}

	Sweet.prototype.touch = function() {
		if(this.x > nBasket.x - 30 && this.x < nBasket.x + BasketWidth && this.y + objectSize >= canvas.height-BasketHeight
		&& this.y + objectSize < canvas.height-BasketHeight+10) {
			//drawBasket();
			sweets.splice(i, 1);
			score = score - 10;
		}
		else if(this.y > 520){
			//drawBasket();
			sweets.splice(i, 1);
		}

	}

	//////////////////////////////////



	/////////////////////////////////



	function drawScore() {
		ctx.font = "25px Arial";
		ctx.fillStyle = "#22822F";
		ctx.fillText("Score: "+score, 8, 25);
	}


	function Basket(x, y, color, width, height, imageSource) {
        this.x = x;
		this.y = y;
		this.color = color;
		this.width = width;
		this.height = height;
		this.image = new Image();
        this.image.src = imageSource;
    }

	Basket.prototype.draw = function() {
		ctx.drawImage(this.image, this.x, this.y, this.width, this.height);
	}


	var nBasket = new Basket(BasketX, canvas.height-BasketHeight-10, "#0A4EA0", BasketWidth, BasketHeight, "Basket.png");

	function draw()
    {
		currScreen = "game";
		console.log(level);
		ctx.clearRect(0, 0, canvas.width, canvas.height);
		ctx.beginPath();
		//clearInterval(drawS);



		ctx.drawImage(background,0,0);

		nBasket.draw();

		if(rightPressed && nBasket.x < canvas.width-BasketWidth)
        {
            nBasket.x += 4;
        }
        else if(leftPressed && nBasket.x > 0)
        {
            nBasket.x -= 4;
        }

		if(ccounter == 30)
		{
			var sweet = new Sweet(getRndInteger(objectSize, 570), y, "#0CA00A", objectSize, objectSize,
			sweImages[getRndInteger(0, 5)]);
			sweets.push(sweet);

		}

		if(ccounter == 40)
		{
			var healthy = new Healthy(getRndInteger(objectSize, 570), y, "#0CA00A", objectSize, objectSize,
			healthyImages[getRndInteger(0, 5)]);
			HealthyArr.push(healthy);

			ccounter = 0;
		}

		drawScore();




		for(i = 0; i < sweets.length; i++)
		{
			sweets[i].update();
		}

		for(i = 0; i < sweets.length; i++)
		{
			sweets[i].touch();
		}
		for(i = 0; i < sweets.length; i++)
		{
			sweets[i].draw();
		}


        for(i = 0; i < HealthyArr.length; i++)
		{
			HealthyArr[i].update();
		}

        for(i = 0; i < HealthyArr.length; i++)
		{
			HealthyArr[i].touch();
		}

        for(i = 0; i < HealthyArr.length; i++)
		{
			HealthyArr[i].draw();
		}

		ccounter = ccounter + 1;

		if(score == scoreNeeded) {
			sweets = [];
			HealthyArr = [];
			score = 0;
			scoreNeeded += 10;
			dy += 0.5;

			if(level == 10){

			ctx.clearRect(0, 0, canvas.width, canvas.height);
			GameWon();
			clearInterval(drawInterval);
			return;

			}


			levelInterval = setInterval(Level, 15);
			clearInterval(drawInterval);

		}

		//drawBasket();

    }



	///////////////////////////////////





</script>

</body>
</html>
